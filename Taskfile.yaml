version: '3'

tasks:
  clean:
    cmds:
      - rm -rf build static
      - mkdir -p build/{yacd,official} static/ruleset
  build-dashboard:
    cmds:
      - curl -sSL https://github.com/STASH-NETWORKS-LIMITED/yacd/tarball/master -o build/yacd.tgz
      - defer: rm -f build/yacd.tgz
      - curl -sSL https://github.com/Dreamacro/clash-dashboard/tarball/master -o build/official.tgz
      - defer: rm -f build/official.tgz
      - tar -zxf build/yacd.tgz --strip-components 1 -C build/yacd
      - defer: rm -rf build/yacd
      - tar -zxf build/official.tgz --strip-components 1 -C build/official
      - defer: rm -rf build/official
      - (cd build/yacd && yarn install > /dev/null 2>&1 && yarn build > /dev/null 2>&1)
      - (cd build/official && pnpm install > /dev/null 2>&1 && pnpm build > /dev/null 2>&1)
      - cp -r build/yacd/public static/yacd
      - cp -r build/official/dist static/official
  download-ruleset:
    cmds:
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt -o static/ruleset/reject.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt -o static/ruleset/icloud.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt -o static/ruleset/apple.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt -o static/ruleset/google.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt -o static/ruleset/proxy.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt -o static/ruleset/direct.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt -o static/ruleset/private.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt -o static/ruleset/gfw.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt -o static/ruleset/greatfire.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/tld-not-cn.txt -o static/ruleset/tld-not-cn.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt -o static/ruleset/telegramcidr.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt -o static/ruleset/cncidr.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt -o static/ruleset/lancidr.yaml
      - curl -sSL https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/applications.txt -o static/ruleset/applications.yaml
  download-mmdb:
    cmds:
      - curl -sSL https://cdn.jsdelivr.net/gh/Hackl0us/GeoIP2-CN@release/Country.mmdb -o static/Country.mmdb
  download-clash:
    vars:
      CLASH_URL:
        sh: curl -sSL https://api.github.com/repos/Dreamacro/clash/releases/tags/premium | jq '.assets[].browser_download_url | select (. | test("clash-{{.TASK}}-\\d{4}.*gz"))'
    cmds:
      - rm -rf build/clash-{{.TASK}}.gz build/clash-{{.TASK}} static/xclash
      - curl -sSL {{.CLASH_URL}} -o build/clash-{{.TASK}}.gz
      - gzip -d build/clash-{{.TASK}}.gz
      - mv build/clash-{{.TASK}} static/xclash
      - chmod +x static/xclash
  build-tpclash:
    label: build-{{.TASK}}
    vars:
      TPCLASH_COMMIT:
        sh: git rev-parse HEAD
    cmds:
      - |
        GOOS={{.GOOS}} GOARCH={{.GOARCH}} GOARM={{.GOARM}} GOMIPS={{.GOMIPS}} \
        go build -trimpath -o build/tpclash-{{.TASK}} -ldflags \
        "-w -s -X main.commit={{.TPCLASH_COMMIT}}"
  linux-386:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: 386
        }
  linux-amd64:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: amd64
        }
  linux-amd64-v3:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: amd64,
          GOAMD64: v3
        }
  linux-armv5:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: arm,
          GOARM: 5
        }
  linux-armv6:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: arm,
          GOARM: 6
        }
  linux-armv7:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: arm,
          GOARM: 7
        }
  linux-armv8:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: arm64
        }
  linux-mips-hardfloat:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: mips,
          GOMIPS: hardfloat
        }
  linux-mipsle-softfloat:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: mipsle,
          GOMIPS: softfloat
        }
  linux-mipsle-hardfloat:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: mipsle,
          GOMIPS: hardfloat
        }
  linux-mips64:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: mips64
        }
  linux-mips64le:
    cmds:
      - task: download-clash
        vars: { TASK: "{{.TASK}}" }
      - task: build-tpclash
        vars: {
          TASK: "{{.TASK}}",
          GOOS: linux,
          GOARCH: mips64le
        }
  default:
    cmds:
      - task: clean
      - task: build-dashboard
      - task: download-ruleset
      - task: download-mmdb
      - task: linux-386
      - task: linux-amd64
      - task: linux-amd64-v3
      - task: linux-armv5
      - task: linux-armv6
      - task: linux-armv7
      - task: linux-mips-hardfloat
      - task: linux-mipsle-softfloat
      - task: linux-mipsle-hardfloat
      - task: linux-mips64
      - task: linux-mips64le